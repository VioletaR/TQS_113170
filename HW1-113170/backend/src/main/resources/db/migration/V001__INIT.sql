-- Enums
CREATE TYPE user_role AS ENUM ('USER', 'STAFF');

-- Tables
CREATE TABLE restaurant
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255) UNIQUE NOT NULL,
    seats INT NOT NULL,
    location VARCHAR(255) NOT NULL,

    CONSTRAINT pk_restaurant PRIMARY KEY (id)
);

CREATE TABLE "user"
(
    id       BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    username VARCHAR(255) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    role     user_role NOT NULL DEFAULT 'USER',
    CONSTRAINT pk_user PRIMARY KEY (id)
);

CREATE TABLE meal
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    restaurant_id BIGINT NOT NULL,
    price         NUMERIC(10,2) NOT NULL,
    meal_date          TIMESTAMP NOT NULL,
    name          VARCHAR(255) NOT NULL,

    CONSTRAINT pk_meal PRIMARY KEY (id),
    CONSTRAINT fk_meal_on_restaurant FOREIGN KEY (restaurant_id)
        REFERENCES restaurant (id) ON DELETE CASCADE,
    CONSTRAINT unique_meal_per_day UNIQUE (restaurant_id, name, meal_date)
);

CREATE TABLE user_meal
(
    id      BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_id BIGINT NOT NULL,
    meal_id BIGINT NOT NULL,
    is_check   BOOLEAN DEFAULT FALSE NOT NULL,
    code    VARCHAR(50) NOT NULL,

    CONSTRAINT pk_user_meal PRIMARY KEY (id),
    CONSTRAINT fk_user_meal_on_user FOREIGN KEY (user_id)
        REFERENCES "user" (id) ON DELETE CASCADE,
    CONSTRAINT fk_user_meal_on_meal FOREIGN KEY (meal_id)
        REFERENCES meal (id) ON DELETE CASCADE,
    CONSTRAINT unique_user_meal UNIQUE (user_id, meal_id)
);

-- Indexes for performance
CREATE INDEX idx_meal_restaurant ON meal(restaurant_id);
CREATE INDEX idx_user_meal_user ON user_meal(user_id);
CREATE INDEX idx_user_meal_meal ON user_meal(meal_id);
CREATE INDEX idx_user_meal_user_meal ON user_meal(user_id, meal_id);
