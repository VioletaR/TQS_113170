version: '3.8'

services:
  postgres:
    image: postgres:17
    environment:
      POSTGRES_DB: db
      POSTGRES_PASSWORD: secret
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - backend
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  backend:
    depends_on:
      postgres:
        condition: service_healthy
    build: ./backend
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health | grep UP || exit 1"
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - backend
    volumes:
      - maven_data:/root/.m2
      - .backend:/backend

    develop:
      watch:
        - action: sync+restart
          path: ./backend
          target: /app

  frontend:
    build:
      context: ./frontend
      dockerfile: "Dockerfile.prod"
    volumes:
      - ./frontend:/frontend
      - node_modules:/frontend/node_modules
    networks:
      - frontend
    ports:
      - "3000:3000"

  proxy:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    networks:
      - backend
      - frontend
    restart: unless-stopped
    volumes:
      - ./proxy/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      backend:
        condition: service_healthy

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    command:
      - --web.enable-remote-write-receiver
      - --enable-feature=native-histograms
      - --config.file=/etc/prometheus/prometheus.yaml
    volumes:
      - ./k6/prometheus.yaml:/etc/prometheus/prometheus.yaml
    networks:
      - backend

  grafana:
    image: grafana/grafana:latest
    depends_on:
      - prometheus
    ports:
      - "3001:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
    volumes:
      - ./k6/grafana:/etc/grafana/provisioning/
      - grafana_data:/var/lib/grafana
    networks:
      - backend

  k6:
    image: grafana/k6:0.54.0
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "6565:6565"
    volumes:
      - ./k6:/k6
    environment:
      - K6_PROMETHEUS_RW_SERVER_URL=http://prometheus:9090/api/v1/write
    command: run -o experimental-prometheus-rw /k6/spike-test.js
    networks:
      - backend

networks:
  backend:
  frontend:

volumes:
  maven_data:
  pg_data:
  node_modules:
  influxdb_data:
  grafana_data:
